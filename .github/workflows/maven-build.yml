# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: build

on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Get branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})" && echo ${GITHUB_REF##*/}
        id: get_branch
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v2
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v4
        with:
          servers: '[{ "id": "ossrh", "username": "${{ secrets.OSSRH_USER }}", "password": "${{ secrets.OSSRH_PASSWORD }}" }]'
      - name: Build artifact and perform Sonar analysis
        run: echo 'Build artifact and perform Sonar analysis' && ./mvnw --batch-mode clean verify sonar:sonar -Dsonar.login="${{ secrets.SONAR_LOGIN }}" -P coverage
      - if: steps.get_branch.outputs.branch == 'master'
        name: Publish to Central Repository
        run: echo 'Deploying' && ./mvnw --no-transfer-progress --batch-mode clean deploy -DskipTests -Dgpg.passphrase="${{ secrets.PASSPHRASE }}" -P release
